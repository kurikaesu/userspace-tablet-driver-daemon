cmake_minimum_required(VERSION 3.10)
project(userspace_tablet_driver_daemon)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty)

set(CMAKE_CXX_STANDARD 17)
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX "/" CACHE PATH "cache" FORCE)
endif()

find_package(LibUSB REQUIRED)

add_executable(userspace_tablet_driver_daemon src/main.cpp src/usb_devices.cpp src/usb_devices.h src/vendor_handler.h src/xp_pen_handler.cpp src/xp_pen_handler.h src/device_interface_pair.h src/event_handler.cpp src/event_handler.h src/vendor_handler.cpp src/artist_22r_pro.cpp src/artist_22r_pro.h src/artist_22e_pro.cpp src/artist_22e_pro.h src/artist_16_pro.cpp src/artist_16_pro.h src/transfer_handler_pair.h src/transfer_handler.h src/transfer_handler.cpp src/uinput_pen_args.h src/uinput_pad_args.h src/pad_mapping.cpp src/pad_mapping.h src/dial_mapping.cpp src/dial_mapping.h src/aliased_input_event.h src/artist_13_3_pro.cpp src/artist_13_3_pro.h src/artist_24_pro.cpp src/artist_24_pro.h src/artist_12_pro.cpp src/artist_12_pro.h src/deco_pro.cpp src/deco_pro.h src/deco_pro_small.cpp src/deco_pro_small.h src/uinput_pointer_args.h src/deco_pro_medium.cpp src/deco_pro_medium.h src/deco_pro_medium_wireless.cpp src/deco_pro_medium_wireless.h src/hotplug_event.h src/socket_server.cpp src/socket_server.h src/unix_socket_message_queue.cpp src/unix_socket_message_queue.h src/unix_socket_message.h src/transfer_setup_data.h src/deco.cpp src/deco.h src/deco_01v2.cpp src/deco_01v2.h src/huion_handler.cpp src/huion_handler.h src/huion_tablet.cpp src/huion_tablet.h src/star.cpp src/star.h src/star_g430s.cpp src/star_g430s.h src/ac19.cpp src/ac19.h src/stylus_button_mapping.cpp src/stylus_button_mapping.h src/xp_pen_unified_device.cpp src/xp_pen_unified_device.h src/artist_12.cpp src/artist_12.h src/deco_03.cpp src/deco_03.h src/deco_mini7.cpp src/deco_mini7.h src/innovator_16.cpp src/innovator_16.h src/generic_xp_pen_device.cpp src/generic_xp_pen_device.h src/artist_15_6_pro.cpp src/artist_15_6_pro.h src/artist_pro_16.h src/artist_pro_16.cpp src/artist_pro_16tp.cpp src/artist_pro_16tp.h src/deco_02.h src/deco_02.cpp src/star_g640.h src/star_g640.cpp src/deco_large.h src/deco_large.cpp src/button_mapping_configuration.h src/button_mapping_configuration.cpp src/device_specification.h)
target_link_libraries(userspace_tablet_driver_daemon stdc++fs ${LIBUSB_1_LIBRARIES})
target_include_directories(userspace_tablet_driver_daemon PRIVATE ${LIBUSB_1_INCLUDE_DIRS})
target_compile_definitions(userspace_tablet_driver_daemon PRIVATE ${LIBUSB_1_DEFINITIONS})
target_compile_options(userspace_tablet_driver_daemon PRIVATE -fsigned-char)

if(NOT DEFINED UDEV_RULES_PATH)
  set(UDEV_RULES_PATH "etc/udev/")
endif(NOT DEFINED UDEV_RULES_PATH)

if(DEFINED ENV{BUILD_PKG})
    install(TARGETS userspace_tablet_driver_daemon DESTINATION bin)
else()
    install(TARGETS userspace_tablet_driver_daemon DESTINATION usr/bin)
    install(DIRECTORY config/etc/udev/rules.d DESTINATION ${UDEV_RULES_PATH})
    install(DIRECTORY config/usr/ DESTINATION usr)
endif()

set(CPACK_PACKAGING_INSTALL_PREFIX "/usr")
set(CPACK_INSTALLED_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/config;.")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
set(CPACK_STRIP_FILES "userspace_tablet_driver_daemon")
set(CPACK_PACKAGE_VERSION_MAJOR "0")
set(CPACK_PACKAGE_VERSION_MINOR "1")
set(CPACK_PACKAGE_VERSION_PATCH "5")
set(CPACK_DEBIAN_PACKAGE_DEPENDS libusb-1.0-0)
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Userspace drivers for non-wacom tablets")
set(CPACK_PACKAGE_VENDOR $ENV{CMAKE_VENDOR})
set(CPACK_PACKAGE_CONTACT $ENV{CMAKE_CONTACT})
set(CPACK_DEBIAN_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION}")

set(CPACK_RPM_PACKAGE_NAME "userspace-tablet-driver-daemon")
set(CPACK_RPM_FILE_NAME "userspace_tablet_driver_daemon.rpm")
set(CPACK_RPM_PACKAGE_SUMMARY "Userspace drivers for non-wacom tablets")
set(CPACK_RPM_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION}")
set(CPACK_RPM_PACKAGE_RELEASE "1")
set(CPACK_RPM_PACKAGE_ARCHITECTURE "x86_64")
set(CPACK_RPM_SPEC_MORE_DEFINE "%define _build_id_links none")
list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/etc/udev")
list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/etc/udev/rules.d")
list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/usr/share/X11")
list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/usr/share/X11/xorg.conf.d")

if(DEFINED ENV{BUILD_DEB})
    set(CPACK_GENERATOR "DEB")
elseif(DEFINED ENV{BUILD_RPM})
    set(CPACK_GENERATOR "RPM")
endif()

include(CPack)
